{"version":3,"file":"index.umd.js","sources":["../src/index.ts"],"sourcesContent":["import {useCallback, useState} from \"react\";\n\nexport interface SelectionState<TItem> {\n    [key: string]: TItem;\n    [key: number]: TItem;\n}\n\nexport type KeyGetter<TItem> = (item: TItem) => string | number;\n\nexport type UseSelectionResult<TItem> = [(item: TItem) => void, SelectionState<TItem>];\n\nconst useSelection = <TItem>(getKey: KeyGetter<TItem>): UseSelectionResult<TItem> => {\n    const [selection, setSelection] = useState<SelectionState<TItem>>({});\n\n    const onSelectToggle = useCallback((item: TItem) => {\n        const key = getKey(item);\n        const newState = { ...selection };\n        if (selection[key]) {\n            delete newState[key];\n        } else {\n            newState[key] = item;\n        }\n\n        setSelection(newState);\n    }, [selection]);\n\n    return [onSelectToggle, selection];\n};\n\nexport default useSelection;"],"names":["getKey","useState","selection","setSelection","useCallback","item","key","newState"],"mappings":"8dAWqB,SAAQA,GACzB,MAAkCC,WAAgC,IAA3DC,OAAWC,OAclB,MAAO,CAZgBC,cAAY,SAACC,GAChC,IAAMC,EAAMN,EAAOK,GACbE,OAAgBL,GAClBA,EAAUI,UACHC,EAASD,GAEhBC,EAASD,GAAOD,EAGpBF,EAAaI,IACd,CAACL,IAEoBA"}