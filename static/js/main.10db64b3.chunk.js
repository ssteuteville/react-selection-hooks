(this["webpackJsonpreact-selection-hooks-example"]=this["webpackJsonpreact-selection-hooks-example"]||[]).push([[0],{279:function(e,t,n){"use strict";n.r(t);var i=n(0),r=n.n(i),a=n(13),o=n.n(a),c=(n(52),n(42)),s=n(308),l=n(301),d=n(309),m=n(302),p=n(310),h=n(5),u=function(e){var t=e.text,n=e.children,r=Object(i.useState)(0),a=Object(c.a)(r,2),o=a[0],u=a[1];return Object(h.jsxs)(s.a,{children:[Object(h.jsx)(l.a,{position:"sticky",children:Object(h.jsxs)(d.a,{value:o,onChange:function(e,t){return u(t)},children:[Object(h.jsx)(m.a,{label:"Demo"}),Object(h.jsx)(m.a,{label:"Code"})]})}),0===o&&n,1===o&&Object(h.jsx)(p.a,{language:"ts",children:t})]})},j=n(41),b=n(304),y=n(312),g=n(306),x=n(303),f=n(25),k=n(282),O=n(305),v=Array.from({length:20}).map((function(e,t){return{key:"Item".concat(t)}})),L=function(){var e=Object(j.a)(v,(function(e){return e.key})),t=e.onSelect,n=e.isSelected;return Object(h.jsxs)(x.a,{children:[Object(h.jsx)(f.a,{variant:"h2",children:"react-selection-hooks"}),Object(h.jsx)(f.a,{variant:"body1",children:"Regular click to selection a single item"}),Object(h.jsx)(f.a,{variant:"body1",children:"Shift click to add a range of items to selection using previous pivot point"}),Object(h.jsx)(f.a,{variant:"body1",children:"Ctrl click to add/remove an item from the current selection"}),Object(h.jsx)(k.a,{variant:"outlined",children:Object(h.jsx)(s.a,{paddingLeft:2,paddingRight:2,children:Object(h.jsxs)(b.a,{disablePadding:!0,children:[Object(h.jsx)(O.a,{children:"Select some items!"}),v.map((function(e){return Object(h.jsx)(y.a,{button:!0,selected:n(e),onClick:function(n){return t(e,n)},divider:!0,children:Object(h.jsx)(g.a,{primary:e.key})},e.key)}))]})})})]})},S=function(){return Object(h.jsx)("div",{className:"App",children:Object(h.jsx)(u,{text:'\nimport React from \'react\';\nimport useSelection from "react-selection-hooks";\nimport List from \'@material-ui/core/List\';\nimport ListItem from \'@material-ui/core/ListItem\';\nimport ListItemText from \'@material-ui/core/ListItemText\';\nimport { Container, Typography, Paper, Box, ListSubheader } from \'@material-ui/core\';\n\ninterface Item {\n    key: string;\n}\nconst items: Item[] = Array.from({ length: 20 }).map((_, i) => ({ key: `Item${i}` }));\nconst BasicExample = () => {\n    const { onSelect, isSelected } = useSelection<Item>(items, (item: Item) => item.key)\n    return (\n    <Container>\n        <Typography variant="h2">\n          react-selection-hooks\n        </Typography>\n        <Typography variant="body1">\n          Regular click to selection a single item\n        </Typography>\n        <Typography variant="body1">\n          Shift click to add a range of items to selection using previous pivot point\n        </Typography>\n        <Typography variant="body1">\n          Ctrl click to add/remove an item from the current selection\n        </Typography>\n        <Paper variant="outlined">\n          <Box paddingLeft={2} paddingRight={2}>\n            <List disablePadding>\n              <ListSubheader>\n                Select some items!\n              </ListSubheader>\n            {\n              items.map(i => (\n                <ListItem\n                  button\n                  selected={isSelected(i)}\n                  key={i.key}\n                  onClick={e => onSelect(i, e)}\n                  divider\n                >\n                  <ListItemText primary={i.key} />\n                </ListItem>\n              ))\n            }\n            </List>\n          </Box>\n        </Paper>\n      </Container>\n    );\n}\n\nexport default BasicExample;\n',children:Object(h.jsx)(L,{})})})},I=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,314)).then((function(t){var n=t.getCLS,i=t.getFID,r=t.getFCP,a=t.getLCP,o=t.getTTFB;n(e),i(e),r(e),a(e),o(e)}))};o.a.render(Object(h.jsx)(r.a.StrictMode,{children:Object(h.jsx)(S,{})}),document.getElementById("root")),I()},52:function(e,t,n){}},[[279,1,2]]]);
//# sourceMappingURL=main.10db64b3.chunk.js.map