{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["items","Array","from","length","map","_","i","key","App","useSelection","item","onSelect","selectionState","className","Container","Typography","variant","Paper","Box","paddingLeft","paddingRight","List","disablePadding","ListSubheader","ListItem","button","selected","onClick","e","divider","ListItemText","primary","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wUAWMA,EAAgBC,MAAMC,KAAK,CAAEC,OAAQ,KAAMC,KAAI,SAACC,EAAGC,GAAJ,MAAW,CAAEC,IAAI,OAAD,OAASD,OA8C/DE,MA5Cf,WAAgB,IAAD,EACwBC,YAAmBT,GAAO,SAACU,GAAD,OAAgBA,EAAKH,OAA5EI,EADK,EACLA,SAAUC,EADL,EACKA,eAClB,OACE,qBAAKC,UAAU,MAAf,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,mCAGA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,sDAGA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,yFAGA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,yEAGA,cAACC,EAAA,EAAD,CAAOD,QAAQ,WAAf,SACE,cAACE,EAAA,EAAD,CAAKC,YAAa,EAAGC,aAAc,EAAnC,SACE,eAACC,EAAA,EAAD,CAAMC,gBAAc,EAApB,UACE,cAACC,EAAA,EAAD,iCAIAvB,EAAMI,KAAI,SAAAE,GAAC,OACT,cAACkB,EAAA,EAAD,CACEC,QAAM,EACNC,WAAYd,EAAeN,EAAEC,KAE7BoB,QAAS,SAAAC,GAAC,OAAIjB,EAASL,EAAGsB,IAC1BC,SAAO,EALT,SAOE,cAACC,EAAA,EAAD,CAAcC,QAASzB,EAAEC,OAJpBD,EAAEC,qBC3BVyB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9ed34822.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport useSelection from \"react-selection-hooks\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Container, Typography, Paper, Box, ListSubheader } from '@material-ui/core';\n\ninterface Item {\n  key: string;\n}\nconst items: Item[] = Array.from({ length: 20 }).map((_, i) => ({ key: `Item${i}` }));\n\nfunction App() {\n  const { onSelect, selectionState } = useSelection<Item>(items, (item: Item) => item.key)\n  return (\n    <div className=\"App\">\n      <Container>\n        <Typography variant=\"h2\">\n          react-selection-hooks\n        </Typography>\n        <Typography variant=\"body1\">\n          Regular click to selection a single item\n        </Typography>\n        <Typography variant=\"body1\">\n          Shift click to add a range of items to selection using previous pivot point\n        </Typography>\n        <Typography variant=\"body1\">\n          Ctrl click to add/remove an item from the current selection\n        </Typography>\n        <Paper variant=\"outlined\">\n          <Box paddingLeft={2} paddingRight={2}>\n            <List disablePadding>\n              <ListSubheader>\n                Select some items!\n              </ListSubheader>\n            {\n              items.map(i => (\n                <ListItem\n                  button\n                  selected={!!selectionState[i.key]}\n                  key={i.key}\n                  onClick={e => onSelect(i, e)}\n                  divider\n                >\n                  <ListItemText primary={i.key} />\n                </ListItem>\n              ))\n            }\n            </List>\n          </Box>\n        </Paper>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}