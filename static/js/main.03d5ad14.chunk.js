(this["webpackJsonpreact-selection-hooks-example"]=this["webpackJsonpreact-selection-hooks-example"]||[]).push([[0],{298:function(e,t,n){"use strict";n.r(t);var i=n(0),a=n.n(i),o=n(10),c=n.n(o),r=(n(71),n(55)),s=n(38),l=n(320),d=n(331),m=n(322),u=n(330),p=n(332),y=n(3),b=function(e){var t=e.text,n=e.title,a=e.children,o=Object(i.useState)(0),c=Object(r.a)(o,2),b=c[0],h=c[1];return Object(y.jsxs)("div",{children:[Object(y.jsx)(s.a,{variant:"h2",children:n}),Object(y.jsx)(l.a,{position:"sticky",color:"default",children:Object(y.jsxs)(d.a,{value:b,onChange:function(e,t){return h(t)},children:[Object(y.jsx)(m.a,{label:"Demo"}),Object(y.jsx)(m.a,{label:"Code"})]})}),Object(y.jsxs)(u.a,{padding:"50px",border:"1px solid lightgrey",children:[0===b&&a,1===b&&Object(y.jsx)(p.a,{language:"ts",children:t})]})]})},h=n(27),j=n(325),g=n(333),f=n(327),x=n(323),v=n(324),S=n(300),k=n(326),O=n(328),L=n(329),C=Object(x.a)((function(e){return{pivot:{border:"1px solid ".concat(e.palette.primary.main)},subheader:{paddingTop:e.spacing(2)},selectionCount:{marginLeft:e.spacing(2)}}})),I=function(e){return e.key},T=Array.from({length:20}).map((function(e,t){return{key:"Item".concat(t)}})),A=function(){var e=C(),t=Object(h.a)(T,{getKey:I}),n=t.onSelect,i=t.isSelected,a=t.state,o=t.selectionCount,c=t.selectAll,r=t.clearSelection;return Object(y.jsxs)(v.a,{children:[Object(y.jsx)(s.a,{variant:"body1",children:"Regular click to selection a single item"}),Object(y.jsx)(s.a,{variant:"body1",children:"Shift click to add a range of items to selection using previous pivot point"}),Object(y.jsx)(s.a,{variant:"body1",children:"Ctrl click to add/remove an item from the current selection"}),Object(y.jsx)(S.a,{variant:"outlined",children:Object(y.jsx)(u.a,{paddingLeft:2,paddingRight:2,children:Object(y.jsxs)(j.a,{disablePadding:!0,children:[Object(y.jsxs)(k.a,{className:e.subheader,children:[Object(y.jsxs)(f.a,{children:[Object(y.jsx)(s.a,{component:"span",children:"Select some items!"}),Object(y.jsxs)(s.a,{variant:"body2",component:"span",className:e.selectionCount,children:["(",o," selected)"]})]}),Object(y.jsxs)(O.a,{children:[Object(y.jsx)(L.a,{variant:"outlined",size:"small",onClick:function(){return c()},children:"All"}),Object(y.jsx)(L.a,{variant:"outlined",size:"small",onClick:function(){return r()},children:"Clear"})]})]}),T.map((function(t){return Object(y.jsx)(g.a,{button:!0,selected:i(t),onClick:function(e){return n(t,e)},divider:!0,className:a.pivotKey===t.key?e.pivot:void 0,children:Object(y.jsx)(f.a,{primary:t.key})},t.key)}))]})})})]})},R=n(28),B=n(35),E=Object(x.a)((function(e){return{pivot:{border:"1px solid ".concat(e.palette.primary.main)},subheader:{paddingTop:e.spacing(2)},selectionCount:{marginLeft:e.spacing(2)}}})),P=function(e){return e.key},K=Array.from({length:20}).map((function(e,t){return{key:"Item".concat(t)}})),N=function(e,t){var n=Object(h.b)(e,t);return n.selectedItems.length>5?Object(R.a)(Object(R.a)({},e),{},{didEnforceLimit:!0}):Object(R.a)(Object(R.a)({},n),{},{didEnforceLimit:!1})},z=function(){var e=E(),t=Object(h.a)(K,{getKey:P,reducer:N}),n=t.selectAll,a=t.removeFromSelection,o=t.clearSelection,c=t.selectionCount,r=t.onSelect,l=t.isSelected,d=t.state,m=d.pivotKey,p=d.didEnforceLimit,b=Object(B.b)(),x=b.enqueueSnackbar,C=b.closeSnackbar;return Object(i.useEffect)((function(){return p&&x("You can't select more than 5!",{variant:"error",key:"max-selection-error"}),function(){return C("max-selection-error")}}),[p,x,C]),Object(y.jsxs)(v.a,{children:[Object(y.jsx)(s.a,{variant:"body1",children:"Regular click to select a single item"}),Object(y.jsx)(s.a,{variant:"body1",children:"Shift click to add a range of items to selection using previous pivot point"}),Object(y.jsx)(s.a,{variant:"body1",children:"Ctrl/CMD click to add/remove an item from the current selection"}),Object(y.jsx)(S.a,{variant:"outlined",children:Object(y.jsx)(u.a,{paddingLeft:2,paddingRight:2,children:Object(y.jsxs)(j.a,{disablePadding:!0,children:[Object(y.jsxs)(k.a,{className:e.subheader,children:[Object(y.jsxs)(f.a,{children:[Object(y.jsx)(s.a,{component:"span",children:"Select some items!"}),Object(y.jsxs)(s.a,{variant:"body2",component:"span",className:e.selectionCount,children:["(",c,"/",5," selected)"]})]}),Object(y.jsxs)(O.a,{children:[Object(y.jsx)(L.a,{variant:"outlined",size:"small",onClick:function(){return n()},children:"All"}),Object(y.jsx)(L.a,{variant:"outlined",size:"small",onClick:function(){return o()},children:"Clear"})]})]}),K.map((function(t){return Object(y.jsxs)(g.a,{button:!0,selected:l(t),onClick:function(e){return r(t,e)},divider:!0,className:m===t.key?e.pivot:void 0,children:[Object(y.jsx)(f.a,{primary:t.key}),Object(y.jsx)(O.a,{children:Object(y.jsx)(L.a,{color:"secondary",size:"small",onClick:function(){return a(t)},children:"Remove"})})]},t.key)}))]})})})]})},M=function(){return Object(y.jsx)("div",{className:"App",children:Object(y.jsxs)(v.a,{children:[Object(y.jsx)(s.a,{variant:"h1",children:"react-selection-hooks"}),Object(y.jsx)(b,{text:'\nimport React from \'react\';\nimport useSelection, { PivotReducerState } from "react-selection-hooks";\nimport List from \'@material-ui/core/List\';\nimport ListItem from \'@material-ui/core/ListItem\';\nimport ListItemText from \'@material-ui/core/ListItemText\';\nimport { Container, Typography, Paper, Box, ListSubheader, makeStyles, Button, ListItemSecondaryAction } from \'@material-ui/core\';\n\nconst useStyles = makeStyles((theme) => ({\n  pivot: {\n    border: `1px solid ${theme.palette.primary.main}`\n  },\n  subheader: {\n    paddingTop: theme.spacing(2)\n  },\n  selectionCount: {\n    marginLeft: theme.spacing(2),\n  },\n}))\n\ninterface Item {\n    key: string;\n}\n\n// for best performance getKey should be wrapped in `useCallback` or declared out of the render body\nconst getKey = (item: Item) => item.key;\nconst items: Item[] = Array.from({ length: 20 }).map((_, i) => ({ key: `Item${i}` }));\nconst BasicExample = () => {\n    const classes = useStyles();\n    const { onSelect, isSelected, state, selectionCount, selectAll, clearSelection } = useSelection<Item, PivotReducerState<Item>>(items, {\n      getKey\n    });\n    return (\n    <Container>\n        <Typography variant="body1">\n          Regular click to selection a single item\n        </Typography>\n        <Typography variant="body1">\n          Shift click to add a range of items to selection using previous pivot point\n        </Typography>\n        <Typography variant="body1">\n          Ctrl click to add/remove an item from the current selection\n        </Typography>\n        <Paper variant="outlined">\n          <Box paddingLeft={2} paddingRight={2}>\n            <List disablePadding>\n            <ListSubheader className={classes.subheader}>\n                <ListItemText>\n                  <Typography component="span">\n                    Select some items!\n                  </Typography>\n                  <Typography variant="body2" component="span" className={classes.selectionCount}>\n                    ({selectionCount} selected)\n                  </Typography>\n                </ListItemText>\n                <ListItemSecondaryAction>\n                <Button variant="outlined" size="small" onClick={() => selectAll()}>\n                    All\n                  </Button>\n                  <Button variant="outlined" size="small" onClick={() => clearSelection()}>\n                    Clear\n                  </Button>\n                </ListItemSecondaryAction>\n              </ListSubheader>\n            {\n              items.map(i => (\n                <ListItem\n                  button\n                  selected={isSelected(i)}\n                  key={i.key}\n                  onClick={e => onSelect(i, e)}\n                  divider\n                  className={state.pivotKey === i.key ? classes.pivot : undefined}\n                >\n                  <ListItemText primary={i.key} />\n                </ListItem>\n              ))\n            }\n            </List>\n          </Box>\n        </Paper>\n      </Container>\n    );\n}\n\nexport default BasicExample;\n',title:"Basic Example",children:Object(y.jsx)(A,{})}),Object(y.jsx)(b,{text:'\nimport React from \'react\';\nimport useSelection, { pivotReducer, PivotReducerState, UseSelectionApiReducerActions } from "react-selection-hooks";\nimport List from \'@material-ui/core/List\';\nimport ListItem from \'@material-ui/core/ListItem\';\nimport ListItemText from \'@material-ui/core/ListItemText\';\nimport { Container, Typography, Paper, Box, ListSubheader, makeStyles, ListItemSecondaryAction, Button } from \'@material-ui/core\';\nimport { useSnackbar } from \'notistack\';\nimport { useEffect } from \'react\';\nconst useStyles = makeStyles((theme) => ({\n  pivot: {\n    border: `1px solid ${theme.palette.primary.main}`\n  },\n  subheader: {\n    paddingTop: theme.spacing(2)\n  },\n  selectionCount: {\n    marginLeft: theme.spacing(2),\n  }\n}))\n\ninterface Item {\n    key: string;\n}\n\n// for best performance getKey should be wrapped in `useCallback` or declared out of the render body\nconst getKey = (item: Item) => item.key;\nconst items: Item[] = Array.from({ length: 20 }).map((_, i) => ({ key: `Item${i}` }));\n\nconst MAX_ITEMS = 5;\nconst maxItemsReducer = (state: PivotReducerState<Item>, action: UseSelectionApiReducerActions<Item>) => {\n  const newState = pivotReducer(state, action);\n\n  if (newState.selectedItems.length > MAX_ITEMS) {\n    return {\n      ...state,\n      didEnforceLimit: true\n    }\n  }\n\n  return {\n    ...newState,\n    didEnforceLimit: false\n  }\n};\n\ntype ReducerState = PivotReducerState<Item> & { didEnforceLimit: boolean }\n\nconst AdvancedExample = () => {\n    const classes = useStyles();\n    const { selectAll, removeFromSelection, clearSelection, selectionCount, onSelect, isSelected, state: { pivotKey, didEnforceLimit } } = useSelection<Item, ReducerState>(items, {\n      getKey,\n      reducer: maxItemsReducer\n    });\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n    useEffect(() => {\n      if (didEnforceLimit) {\n        enqueueSnackbar(\'You can\\\'t select more than 5!\', {\n          variant: \'error\',\n          key: \'max-selection-error\',\n        })\n      }\n\n      return () => closeSnackbar(\'max-selection-error\');\n    }, [didEnforceLimit, enqueueSnackbar, closeSnackbar]);\n  \n    return (\n    <Container>\n        <Typography variant="body1">\n          Regular click to select a single item\n        </Typography>\n        <Typography variant="body1">\n          Shift click to add a range of items to selection using previous pivot point\n        </Typography>\n        <Typography variant="body1">\n          Ctrl/CMD click to add/remove an item from the current selection\n        </Typography>\n        <Paper variant="outlined">\n          <Box paddingLeft={2} paddingRight={2}>\n            <List disablePadding>\n              <ListSubheader className={classes.subheader}>\n                <ListItemText>\n                  <Typography component="span">\n                    Select some items!\n                  </Typography>\n                  <Typography variant="body2" component="span" className={classes.selectionCount}>\n                    ({selectionCount}/{MAX_ITEMS} selected)\n                  </Typography>\n                </ListItemText>\n                <ListItemSecondaryAction>\n                <Button variant="outlined" size="small" onClick={() => selectAll()}>\n                    All\n                  </Button>\n                  <Button variant="outlined" size="small" onClick={() => clearSelection()}>\n                    Clear\n                  </Button>\n                </ListItemSecondaryAction>\n              </ListSubheader>\n            {\n              items.map(i => (\n                <ListItem\n                  button\n                  selected={isSelected(i)}\n                  key={i.key}\n                  onClick={e => onSelect(i, e)}\n                  divider\n                  className={pivotKey === i.key ? classes.pivot : undefined}\n                >\n                  <ListItemText primary={i.key} />\n                  <ListItemSecondaryAction>\n                    <Button color="secondary" size="small" onClick={() => removeFromSelection(i)}>Remove</Button>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))\n            }\n            </List>\n          </Box>\n        </Paper>\n      </Container>\n    );\n}\n\nexport default AdvancedExample;\n',title:"Advanced Example",children:Object(y.jsx)(z,{})})]})})},w=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,335)).then((function(t){var n=t.getCLS,i=t.getFID,a=t.getFCP,o=t.getLCP,c=t.getTTFB;n(e),i(e),a(e),o(e),c(e)}))};c.a.render(Object(y.jsx)(a.a.StrictMode,{children:Object(y.jsx)(B.a,{anchorOrigin:{vertical:"top",horizontal:"right"},children:Object(y.jsx)(M,{})})}),document.getElementById("root")),w()},71:function(e,t,n){}},[[298,1,2]]]);
//# sourceMappingURL=main.03d5ad14.chunk.js.map